--kalas#1330 26/08/22

return (function()local arfarflIIIIlIl = "\109\101\111\119\97\114\102";local arfarflIIIIlIl = "\109\101\111\119\97\114\102";local arfarflIIIIlIl = "\109\101\111\119\97\114\102";local arfarflIIllllI=47;local arfarflIIlllIl=298;local arfarflIIlllII=3;local arfarflIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local arfarflIIlllIl=45;local arfarflIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local arfarflIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local arfarflIIllIll='\101\108\73\57\77\88\78\110\76\49\115\108\85\81\61\61';local arfarflIIlIIIl="\109\89\71\113\67\83\80\55\78\81\105\87\89\66\90\56\116\72\65\56\89\102\100\51\74\71\113\79\85\51\57\111\82\70\49\103\43\88\88\54\103\107\54\49\65\80\97\83\110\77\73\115\103\107\97\80\117\107\81\49\88\86\105\77\48\105\102\112\67\50\98\48\112\105\66\68\68\112\74\67\73\84\89\56\49\55\121\98\70\55\70\79\66\102\110\47\65\65\101\84\82\65\112\117\82\68\100\99\69\74\71\80\107\80\87\55\68\83\49\113\116\120\120\65\66\108\55\97\113\101\81\67\106\113\51\78\103\103\67\101\85\117\73\51\83\73\106\56\122\84\70\78\112\103\52\83\74\82\53\99\90\116\86\72\104\66\104\112\105\49\77\54\50\121\56\88\83\78\105\83\85\100\114\49\120\82\115\50\119\98\67\78\49\101\66\76\107\71\66\77\75\71\80\88\106\89\75\76\75\87\66\83\111\55\111\81\111\98\118\86\57\113\70\106\81\72\71\99\66\72\74\112\99\72\106\102\78\52\72\101\101\49\73\49\120\68\67\112\56\79\53\54\114\108\73\100\81\77\78\85\76\117\88\103\69\106\73\114\88\67\80\84\43\104\101\80\56\73\80\112\121\83\82\89\116\75\84\114\114\80\87\101\50\86\90\47\81\103\68\114\111\113\101\53\76\111\110\117\48\86\102\73\122\86\52\116\100\85\106\119\51\114\82\104\120\84\118\56\85\70\86\76\71\65\111\101\79\82\48\54\53\110\81\50\121\84\52\55\85\81\75\117\76\117\48\76\106\50\101\117\85\107\101\100\67\54\67\105\112\70\68\106\79\113\114\119\102\82\120\84\98\85\88\53\52\97\78\112\52\54\78\68\77\78\51\51\66\121\68\101\119\121\120\87\70\120\89\89\66\55\73\88\69\110\109\109\112\104\120\68\99\56\116\111\81\110\51\107\112\85\112\80\97\53\109\81\52\81\114\71\105\119\86\48\118\52\52\69\80\90\111\117\82\119\70\75\102\109\99\57\49\118\85\56\121\119\106\53\72\53\55\97\50\72\78\73\56\107\79\85\107\120\98\86\114\116\106\53\103\74\100\56\115\104\65\98\68\74\87\85\107\82\70\110\47\76\57\57\99\66\106\115\43\67\112\103\76\69\73\106\101\77\79\85\51\54\55\83\107\119\106\114\122\82\84\116\120\70\111\85\110\106\108\122\109\67\104\68\119\43\110\112\119\87\78\48\87\71\75\116\100\97\118\56\99\104\73\106\97\101\112\89\50\119\50\55\75\74\81\53\70\52\55\89\87\43\99\114\87\80\75\111\79\90\106\69\47\108\78\109\115\120\43\106\107\98\84\104\102\75\79\56\55\85\112\81\118\90\72\101\75\74\75\72\47\81\81\78\67\113\66\82\107\85\117\47\88\90\99\106\108\108\56\70\115\84\103\69\97\69\104\88\115\82\83\90\105\73\51\48\78\99\97\74\77\80\104\102\118\117\97\90\85\114\102\111\84\87\81\74\102\73\116\108\119\106\108\106\83\78\77\118\88\108\43\90\100\73\100\115\50\51\72\84\110\72\88\101\117\122\122\73\51\72\88\75\71\74\90\108\79\66\97\90\88\69\108\88\70\76\112\51\51\119\72\121\107\110\80\105\113\86\105\114\81\90\97\69\70\53\98\110\79\68\97\109\75\78\101\103\70\65\78\122\98\65\75\54\43\84\75\51\99\102\101\103\89\83\122\68\85\86\77\90\87\66\108\87\116\108\53\86\120\117\65\115\75\70\73\120\76\50\118\84\118\56\73\88\53\65\53\57\66\109\82\79\84\119\76\54\81\50\120\88\72\115\113\67\76\71\77\110\117\117\86\117\104\71\111\67\108\108\75\101\111\121\99\78\103\56\81\83\73\108\105\69\99\100\111\86\84\112\98\87\102\74\117\87\78\120\86\121\110\84\54\78\98\81\82\103\88\89\71\116\86\115\119\75\106\113\65\118\68\98\51\54\99\115\83\43\87\57\78\50\109\110\111\117\49\100\79\99\107\80\109\107\103\122\89\53\47\87\67\119\104\103\52\50\82\110\117\81\97\98\109\75\80\121\69\120\75\89\89\104\100\79\88\43\87\57\87\74\104\76\107\57\113\47\109\57\75\109\65\65\71\53\77\122\109\108\113\43\111\89\47\70\50\68\103\74\81\109\78\71\74\87\122\68\70\100\98\48\66\51\119\82\85\100\81\47\122\74\105\117\106\80\76\72\119\72\69\56\70\84\77\117\49\43\75\102\55\114\68\49\106\86\80\47\113\78\81\114\122\89\57\105\86\72\81\115\52\55\98\112\82\50\57\72\122\81\57\100\55\49\54\70\105\106\89\72\48\89\89\71\50\84\50\80\97\75\120\81\50\67\56\43\107\73\74\51\102\112\113\84\105\102\65\56\119\48\72\106\100\77\101\121\111\86\104\56\84\89\110\110\69\78\110\65\48\66\99\109\78\83\47\97\79\81\73\112\103\109\107\78\84\112\122\66\75\47\100\114\49\55\97\75\69\49\105\74\87\111\79\86\106\101\119\67\74\43\75\122\106\47\98\112\73\85\77\121\82\53\86\83\81\79\55\111\98\110\56\55\90\104\53\51\50\98\119\80\114\89\43\114\106\100\51\87\52\120\87\75\119\112\90\76\81\88\81\84\117\54\79\112\47\112\100\100\117\48\52\116\87\75\115\98\117\100\83\65\47\116\106\107\101\112\73\116\103\81\107\70\112\78\84\56\50\90\55\120\101\112\53\84\88\88\51\119\111\120\56\120\105\84\114\70\106\70\120\77\52\116\107\78\76\84\51\53\100\106\98\83\104\119\114\87\102\103\86\119\90\106\50\83\73\89\52\80\86\84\115\112\70\47\43\117\122\71\88\117\104\75\70\52\110\55\70\119\119\76\56\47\107\108\101\99\97\66\76\74\86\89\111\70\49\80\74\121\102\116\99\104\47\113\109\87\87\105\113\52\80\80\56\111\71\43\89\76\106\112\43\50\102\102\55\74\84\76\72\53\109\53\71\85\54\85\104\73\73\47\113\70\106\106\67\73\88\77\85\117\71\119\121\50\56\81\106\114\103\116\51\52\81\112\111\102\65\69\89\98\98\81\55\55\68\83\74\107\90\57\109\47\108\68\52\112\78\101\109\73\116\105\98\82\114\103\89\48\43\77\88\73\105\107\87\121\119\85\51\90\78\74\81\88\114\82\102\99\120\116\99\120\51\71\100\113\120\112\118\70\56\71\56\75\108\110\51\80\120\49\100\102\106\97\80\111\117\89\48\43\106\118\102\87\82\56\77\79\108\80\88\67\97\102\82\55\72\104\98\81\114\103\70\109\79\117\103\57\54\97\80\56\110\89\47\47\43\49\109\121\53\50\110\53\114\69\113\52\48\49\66\69\118\54\67\108\56\70\80\47\50\84\98\117\57\105\53\78\116\85\103\56\103\119\119\47\84\77\83\54\53\86\49\99\52\67\117\116\43\90\47\107\110\49\118\77\65\85\50\83\76\113\68\80\101\87\75\83\68\122\84\111\50\118\81\81\86\80\117\86\52\106\100\98\105\77\77\112\54\43\101\78\87\120\75\53\84\79\82\49\50\115\109\57\76\49\113\122\47\118\85\118\104\122\108\106\121\115\54\86\43\100\67\71\108\43\67\52\87\116\72\52\65\97\43\49\110\87\52\49\75\77\72\110\83\105\69\97\119\112\73\54\73\76\50\114\116\118\88\56\107\98\78\84\69\98\108\112\47\52\97\90\83\49\74\101\49\74\43\72\67\119\90\120\88\80\100\51\111\53\114\80\102\116\119\55\88\74\47\101\65\121\122\70\100\114\65\86\82\55\47\89\54\68\67\69\111\104\66\108\53\118\102\99\81\51\102\70\108\107\75\57\78\101\110\67\82\69\74\50\107\113\75\122\68\65\121\80\108\113\47\113\50\70\85\55\121\89\68\109\97\84\55\111\112\87\86\111\121\77\107\66\117\69\83\102\56\89\74\65\119\43\86\53\107\72\66\72\72\54\108\68\98\121\107\100\119\119\52\89\115\70\54\100\104\115\48\68\118\90\77\75\76\102\114\82\90\119\106\99\67\71\65\120\105\75\85\121\84\85\107\106\80\109\88\85\86\85\51\89\121\76\49\74\101\113\106\117\120\89\75\97\57\79\99\78\111\85\49\84\117\65\78\109\52\52\54\78\104\69\57\49\112\110\110\43\103\69\104\120\85\82\90\108\55\99\81\70\49\97\71\82\86\72\53\116\103\83\86\80\57\71\90\57\87\65\43\79\73\103\108\72\108\122\106\53\109\89\49\100\70\77\65\86\100\79\99\48\97\47\57\86\87\55\47\110\107\116\76\117\68\119\73\56\106\87\115\120\75\67\56\104\67\90\80\69\82\66\77\65\77\103\51\107\117\116\119\122\113\68\82\116\117\71\55\52\79\72\43\69\122\57\65\100\83\83\71\76\49\89\99\111\104\71\97\116\66\57\105\115\116\100\79\55\53\71\88\79\82\65\121\89\87\70\50\77\73\51\71\117\86\101\90\85\102\117\110\90\80\65\107\84\121\111\47\104\106\49\55\86\103\100\107\89\78\68\118\115\106\86\74\51\115\116\86\68\117\120\112\81\113\67\73\117\108\114\52\73\116\103\116\90\107\102\74\118\119\73\82\97\54\119\72\47\110\55\112\88\99\79\78\85\104\53\110\115\119\48\103\114\67\50\66\106\115\65\119\122\53\72\84\74\43\50\54\97\109\69\54\49\115\118\79\80\70\98\48\103\81\100\111\110\49\84\69\90\85\89\118\75\108\116\67\116\102\79\113\98\112\109\55\84\99\120\102\83\88\79\54\55\115\109\115\110\119\81\48\116\80\71\116\69\72\119\90\55\87\85\52\85\104\69\77\102\51\121\110\43\121\118\85\122\111\111\81\107\98\70\67\71\70\86\78\57\116\103\87\79\73\56\53\48\69\98\116\70\74\51\119\112\71\86\120\85\103\80\48\51\108\66\54\110\55\72\56\117\75\117\118\119\99\117\80\75\72\121\114\100\55\57\74\66\109\73\90\70\111\70\82\102\84\83\73\114\74\120\51\87\89\114\99\78\109\85\117\49\108\105\98\103\120\98\77\57\120\105\110\52\52\111\65\74\108\57\83\76\57\116\101\48\122\78\86\72\100\121\108\77\67\117\104\49\74\65\68\114\51\84\90\82\77\105\105\52\73\49\122\48\89\103\97\117\83\71\48\114\122\57\117\118\71\121\75\80\101\81\85\77\80\69\81\66\74\85\99\109\88\120\70\52\51\102\69\121\100\99\50\117\70\52\82\117\71\72\78\109\77\84\83\68\105\89\121\78\115\70\55\84\110\116\48\73\74\52\53\100\52\104\98\79\48\77\73\77\73\49\52\79\81\99\88\116\99\90\111\55\105\100\109\108\103\100\54\54\121\88\109\86\48\74\111\80\69\75\85\51\71\67\83\90\103\65\77\116\53\107\53\115\90\115\115\79\83\111\82\79\98\70\107\110\79\79\50\101\51\121\113\73\81\53\108\57\120\53\112\112\120\110\106\90\108\50\71\74\105\68\74\75\85\71\103\49\50\48\77\71\53\89\83\113\98\88\87\118\116\108\88\100\43\104\49\104\109\87\84\56\75\53\121\75\67\83\80\74\83\97\116\105\72\75\72\113\55\103\53\115\110\106\67\57\105\52\54\69\77\115\43\68\97\113\49\105\111\105\102\111\80\73\49\97\107\118\119\109\122\69\114\83\76\115\102\90\87\119\69\108\119\117\88\118\51\72\87\100\85\89\69\112\50\105\100\105\52\84\109\103\103\103\69\67\121\68\102\73\87\57\83\68\115\113\105\50\69\103\122\98\72\99\69\53\99\84\56\117\118\77\70\97\106\102\66\114\72\105\54\74\111\103\43\75\89\43\70\122\104\77\103\71\78\116\78\110\78\86\75\110\104\120\54\75\109\122\83\50\81\97\68\120\114\105\101\86\103\86\121\104\116\75\72\122\49\83\107\65\100\69\109\97\49\82\72\111\85\75\106\55\80\69\78\87\72\55\66\81\77\118\113\71\103\88\122\66\86\87\119\110\121\114\75\84\82\111\53\68\48\78\76\56\74\69\90\51\102\47\97\120\97\69\66\57\86\88\102\110\47\97\65\120\47\89\112\101\119\78\83\54\106\97\81\89\84\80\122\83\98\74\67\55\76\97\65\53\102\121\57\116\68\118\51\50\121\119\104\56\89\82\51\80\104\102\101\106\67\114\57\66\51\79\68\122\65\109\76\67\119\53\82\49\82\68\82\43\56\118\68\65\55\56\81\108\109\118\111\106\69\83\115\50\78\101\88\116\76\50\98\78\43\55\112\101\73\86\73\90\72\49\97\111\102\71\82\101\66\66\85\106\65\69\54\54\101\109\119\89\105\87\68\66\121\84\100\98\119\47\65\49\102\97\101\76\76\102\79\68\73\101\48\70\105\49\118\102\50\90\118\56\100\101\52\120\81\80\122\120\105\49\71\90\68\122\84\97\105\103\111\113\86\82\52\109\74\78\103\116\72\121\114\52\107\101\104\53\108\51\72\110\76\120\83\51\78\49\80\121\84\103\50\119\97\85\43\87\72\51\120\71\73\47\70\79\118\121\120\84\108\88\100\98\65\112\113\87\112\80\69\122\43\105\47\47\50\81\83\81\51\56\68\88\114\98\43\49\103\67\78\98\107\120\117\114\83\80\56\57\101\107\122\51\49\120\111\122\89\115\119\50\115\55\99\87\85\72\104\57\78\73\122\70\104\54\68\65\68\114\73\67\111\69\107\108\70\89\73\55\87\83\109\79\105\72\52\90\56\52\114\106\90\105\120\70\55\67\112\54\71\88\54\50\106\84\67\98\104\112\81\105\90\99\50\54\71\81\49\106\116\77\84\75\122\104\66\57\43\72\105\113\56\75\48\85\82\49\106\99\87\49\87\51\103\80\87\75\66\116\68\53\101\104\97\69\55\101\103\100\75\103\55\107\57\76\89\55\120\77\43\79\55\71\88\103\89\111\50\66\47\108\100\121\85\89\82\115\107\43\71\80\48\116\71\53\113\85\99\71\108\47\75\76\113\80\49\65\70\111\100\118\82\108\67\115\65\51\105\98\69\79\73\121\116\114\69\79\77\84\108\54\114\101\53\89\68\107\66\106\104\106\47\67\121\43\90\119\108\88\119\75\67\117\49\54\90\109\90\47\57\65\111\79\79\98\57\111\56\65\98\105\100\47\47\103\79\101\104\52\83\85\68\67\71\70\43\74\76\100\51\115\55\112\111\107\108\53\84\101\100\48\99\75\89\80\69\80\71\54\78\88\87\72\85\53\53\88\102\75\110\78\102\81\90\81\70\50\83\54\43\118\83\114\82\121\76\79\100\43\104\121\49\55\86\78\68\85\100\82\101\54\106\120\50\77\65\80\49\81\80\107\113\102\110\100\115\78\43\72\98\87\97\75\110\67\54\109\81\52\57\50\75\116\81\107\85\81\122\88\86\119\73\105\48\49\108\69\113\70\82\52\104\72\57\120\114\97\53\104\49\76\121\55\102\110\121\120\121\84\51\104\55\113\112\67\107\79\67\88\82\81\86\74\109\51\70\109\43\105\53\99\67\85\48\107\107\109\79\66\68\104\50\118\118\107\68\52\65\90\65\98\47\67\53\83\43\101\43\88\98\101\54\115\57\106\115\102\52\104\56\69\97\122\98\78\51\53\99\65\110\51\79\108\86\67\100\54\114\53\117\122\52\72\101\82\88\79\108\80\115\77\56\111\68\74\48\102\53\118\80\47\110\109\115\47\80\80\97\121\101\102\97\99\54\50\100\103\113\47\116\115\51\80\116\54\110\81\72\70\90\82\82\121\66\79\112\76\57\72\112\68\86\81\112\97\70\103\76\112\105\73\55\118\82\103\81\113\108\83\71\73\106\81\105\99\81\47\98\110\73\70\55\68\105\89\53\117\51\73\54\101\87\47\97\55\52\119\72\83\83\108\68\103\98\48\88\73\47\52\69\119\107\113\118\99\111\43\83\66\120\52\79\89\106\67\100\83\84\117\115\52\115\110\53\72\114\99\88\66\98\99\75\83\85\43\83\97\76\108\71\73\80\67\71\90\67\86\47\113\101\80\85\103\71\111\43\74\67\103\54\51\49\109\43\85\51\102\77\88\113\49\85\103\122\53\115\51\113\103\67\57\77\68\43\122\82\53\122\83\114\98\100\89\88\83\43\70\74\90\69\87\65\51\88\70\81\57\113\117\112\79\74\100\119\112\55\76\67\65\76\81\56\102\86\118\97\86\79\49\103\89\77\80\55\50\71\75\85\75\98\104\98\72\99\80\109\48\89\68\77\102\67\118\75\74\86\74\53\110\70\121\115\73\70\65\90\67\100\54\70\51\100\72\71\110\71\51\121\65\87\51\105\117\79\89\56\78\118\75\99\81\102\48\121\102\86\78\79\54\111\55\52\114\118\69\98\57\89\73\78\55\49\107\122\81\103\109\98\74\84\122\51\104\112\82\105\51\110\50\107\90\50\108\54\100\83\76\66\121\84\98\105\83\87\50\99\81\68\102\89\67\90\67\82\111\87\52\50\81\111\99\88\73\82\56\55\73\66\87\70\85\81\89\77\103\85\66\73\49\116\112\70\100\110\115\66\105\65\74\74\98\67\83\112\100\98\52\85\68\84\105\82\112\83\117\50\102\107\111\54\76\97\53\114\68\111\77\66\55\69\54\121\73\53\122\98\103\65\70\47\85\110\118\57\74\51\79\89\81\79\116\105\73\118\85\105\82\107\111\51\43\116\50\101\100\109\122\70\100\113\106\51\52\87\50\109\71\65\71\70\100\100\75\117\89\112\53\55\47\69\116\120\43\78\113\99\48\85\104\105\104\82\78\83\67\68\103\114\68\66\111\109\111\104\122\51\57\75\116\78\85\57\119\89\70\83\68\112\113\66\114\119\65\84\52\71\68\90\119\90\108\78\120\101\111\79\86\98\98\102\43\90\65\86\89\50\122\88\99\83\80\107\99\43\106\77\117\69\118\72\82\101\52\120\117\113\106\67\109\49\115\105\78\102\100\122\72\120\55\90\83\115\43\79\49\115\101\75\55\121\109\87\116\102\88\87\68\108\70\120\115\65\69\117\86\73\75\71\74\87\119\89\49\87\104\119\83\101\111\121\118\104\56\43\73\66\51\104\113\100\112\100\74\117\66\67\107\113\85\100\84\108\88\103\103\97\89\108\71\52\77\102\109\115\119\76\72\120\43\48\51\75\54\56\71\53\112\122\65\71\85\85\116\97\84\79\57\105\68\49\51\50\113\89\73\107\80\50\107\55\80\73\105\87\112\47\122\53\69\107\73\68\69\53\65\65\108\113\50\120\85\73\73\104\105\73\112\114\117\89\101\69\118\97\83\117\110\89\84\88\121\111\47\112\52\66\99\108\99\89\81\109\80\102\110\82\69\103\68\121\109\69\84\71\47\55\88\68\80\53\53\85\68\114\97\104\102\83\120\87\82\111\118\78\78\56\50\90\109\82\82\73\101\119\89\113\105\68\109\79\48\85\88\103\43\121\43\78\85\88\47\49\118\76\106\57\120\111\110\73\85\104\86\120\98\69\110\101\81\51\120\69\85\70\112\98\73\90\119\99\83\82\84\119\85\101\76\82\55\101\104\83\83\101\118\71\49\120\83\107\120\115\112\84\90\73\84\76\67\102\116\48\115\88\55\82\47\81\113\72\43\82\121\82\71\121\98\43\47\49\80\109\117\110\66\78\54\113\102\69\117\85\118\75\53\80\82\85\115\106\121\108\114\77\98\78\114\102\89\68\52\81\56\75\107\51\109\85\106\82\75\51\76\55\85\84\70\88\76\66\106\75\65\65\56\106\76\114\76\106\119\87\87\106\88\69\100\70\65\70\82\119\114\80\118\74\77\120\76\76\118\114\121\78\47\101\73\52\115\108\104\70\47\88\108\50\43\114\99\104\106\102\55\70\90\85\81\77\99\97\106\77\76\112\87\51\122\90\73\103\66\75\81\82\105\88\54\122\82\52\56\74\54\47\50\108\67\81\121\122\66\70\100\43\110\79\121\66\89\49\77\53\81\121\85\81\72\100\103\79\57\104\97\47\51\90\114\55\72\71\49\52\68\52\87\55\117\122\90\111\50\76\117\85\86\74\48\100\109\67\107\74\90\56\85\106\81\101\113\69\49\112\86\52\54\120\84\68\47\55\79\70\56\50\116\71\70\97\69\83\88\110\97\108\121\121\99\90\121\80\87\121\67\85\79\56\85\51\100\107\54\79\77\118\82\121\98\114\99\105\74\82\107\83\49\54\104\113\75\90\69\111\49\83\90\121\120\48\82\112\52\72\53\67\68\104\69\50\69\54\68\54\118\99\49\84\55\81\107\53\86\71\49\100\55\69\90\116\111\54\52\90\102\49\121\109\118\55\69\109\111\55\106\51\102\81\118\86\51\121\53\118\100\78\67\67\109\52\100\97\80\103\117\106\114\100\76\72\79\111\67\99\102\78\101\65\106\50\98\66\79\53\55\74\90\106\50\86\68\105\102\98\102\121\88\79\68\85\68\114\78\52\49\67\69\86\104\57\48\114\109\117\118\56\100\83\105\77\89\54\76\65\102\109\66\115\84\122\121\100\57\70\122\122\75\65\90\51\66\55\98\81\77\47\108\117\103\43\90\87\52\105\89\77\43\52\100\70\75\71\77\73\122\105\52\71\66\101\75\107\115\105\54\72\81\86\51\115\103\65\112\90\77\116\80\51\88\103\107\54\67\98\53\71\49\120\110\117\109\88\89\89\49\79\75\49\78\89\54\102\104\77\77\87\85\88\106\99\100\109\86\107\118\99\88\90\56\49\100\75\43\115\114\80\52\101\49\90\117\89\104\104\99\72\118\50\102\68\50\55\75\87\106\79\97\110\66\72\109\120\72\112\68\105\104\78\68\115\56\69\69\115\104\49\113\47\76\109\57\77\116\73\81\112\43\80\51\90\115\75\88\50\115\43\82\97\68\48\76\113\82\68\102\114\67\83\90\99\122\75\85\112\76\116\56\116\84\114\71\103\121\81\80\57\71\90\75\76\118\52\103\118\84\122\43\65\101\80\49\118\74\88\73\82\90\98\113\84\50\87\48\113\90\113\97\107\107\101\51\102\119\78\70\49\109\65\120\53\85\82\72\66\120\106\65\55\121\77\57\56\99\119\99\66\100\120\109\57\67\115\80\122\111\67\75\109\103\122\43\48\67\71\47\67\69\88\74\114\97\47\98\116\122\48\74\103\122\108\80\112\67\77\105\98\113\97\49\105\83\51\73\53\99\116\108\99\87\120\52\103\97\88\69\120\110\53\110\57\81\85\119\57\109\111\103\53\77\52\98\70\110\102\104\65\57\108\81\77\109\86\68\71\116\111\51\103\56\89\112\121\97\51\102\112\72\52\105\72\66\87\122\100\108\98\67\68\50\52\120\48\77\84\81\55\78\49\116\57\85\84\105\72\78\97\82\77\75\79\75\70\119\68\81\67\81\68\108\67\116\49\120\86\68\83\78\108\69\118\82\101\88\109\49\106\55\115\55\68\111\99\117\97\74\106\122\65\119\103\103\65\57\77\116\113\99\52\74\78\78\104\105\119\120\50\100\110\104\76\50\67\102\103\71\107\113\69\90\104\67\99\47\80\56\114\78\101\77\70\114\97\90\79\87\114\79\54\106\90\104\75\114\54\108\75\88\106\72\66\116\110\77\90\53\53\100\76\120\115\49\55\101\55\53\86\69\89\54\71\102\113\80\83\72\57\77\84\101\90\108\122\78\121\97\74\120\100\86\50\88\80\86\115\122\84\73\51\111\117\117\57\43\114\98\111\85\111\78\75\68\90\86\78\99\52\67\109\116\78\119\116\65\79\81\98\76\52\48\76\43\49\111\73\90\76\79\108\111\99\112\112\68\88\82\87\90\107\75\102\82\47\53\122\113\86\103\112\88\69\82\117\118\66\88\79\111\111\89\99\69\82\103\67\72\83\108\110\110\98\68\47\52\117\57\52\86\103\87\117\76\84\104\73\69\112\102\79\89\122\103\77\75\100\84\87\51\82\54\71\115\66\78\71\57\87\121\84\118\109\99\102\107\82\83\98\78\48\56\56\57\97\53\65\100\75\48\103\85\53\105\97\98\69\102\72\101\121\83\110\55\106\70\66\73\54\121\79\113\51\51\109\111\88\57\54\77\76\52\76\67\119\99\81\70\84\84\122\86\67\57\80\87\88\84\122\55\71\98\90\50\68\56\86\57\65\56\115\43\48\100\66\112\82\117\101\73\120\112\103\89\122\97\90\57\110\89\74\85\108\118\112\56\120\83\55\66\57\113\120\99\118\79\99\122\53\97\110\105\73\87\122\80\112\109\71\78\99\75\81\85\48\112\57\115\116\87\89\83\101\65\50\72\86\103\122\115\51\74\56\68\74\101\79\116\101\103\48\116\48\89\65\55\82\117\50\81\114\87\55\115\68\118\107\67\65\84\90\75\98\90\51\68\111\43\81\82\120\73\100\70\85\118\52\98\52\79\50\83\49\85\68\82\70\121\73\73\65\111\85\65\79\89\48\121\104\52\97\118\102\90\100\88\85\122\82\110\68\111\88\81\110\86\74\47\88\104\52\83\66\70\72\111\80\80\75\70\88\105\101\99\117\86\117\110\48\111\119\54\88\108\113\77\68\76\121\101\113\80\79\100\112\54\114\83\81\77\48\83\102\78\86\83\56\70\47\117\85\51\75\76\66\111\53\102\114\116\103\110\57\87\107\102\118\57\78\113\106\107\104\72\74\73\113\119\121\74\115\115\49\73\55\106\73\56\90\119\83\112\51\111\99\99\111\71\75\87\119\53\105\116\102\67\113\116\48\71\55\50\118\57\86\114\73\104\52\81\75\50\73\80\115\78\76\80\65\68\67\57\81\112\81\55\106\54\66\97\54\102\84\67\107\51\120\84\114\98\68\100\54\82\104\50\47\110\107\76\82\43\108\53\55\101\51\47\48\98\77\79\100\98\113\107\97\107\87\104\100\65\76\81\67\110\99\102\103\116\109\85\101\113\76\113\87\113\53\114\101\117\105\80\52\77\98\50\50\66\110\110\47\115\55\65\43\49\80\56\53\121\84\76\79\53\122\76\112\115\78\52\56\68\50\72\111\109\47\74\110\87\110\87\118\113\71\115\107\98\67\100\65\119\120\87\43\120\67\99\111\52\56\48\47\119\109\49\119\75\48\99\71\66\79\84\120\80\109\47\57\97\98\75\97\121\98\77\47\88\69\57\89\117\53\120\53\67\119\74\57\87\118\105\69\69\55\77\111\98\70\68\50\87\118\51\100\109\119\51\67\48\48\104\80\80\52\74\115\112\111\51\82\102\80\50\80\84\84\118\122\52\107\55\55\48\97\81\107\74\72\104\102\47\85\116\54\75\50\107\81\69\51\110\101\76\71\76\113\78\97\113\121\100\89\116\49\97\83\73\55\47\109\108\118\89\73\79\89\114\111\78\87\119\116\88\89\116\48\82\81\116\68\84\48\99\108\81\110\115\71\102\115\72\100\57\120\90\121\105\53\109\107\69\98\43\105\51\87\79\85\117\122\107\81\65\88\75\90\54\90\53\111\78\71\49\118\49\111\50\79\89\86\43\77\110\49\121\43\121\98\114\57\121\87\43\89\122\75\86\89\50\56\113\50\120\116\115\84\112\119\118\121\114\103\76\109\86\68\85\77\87\109\67\117\79\114\68\53\51\51\97\84\110\85\103\66\66\70\114\81\105\117\57\117\99\65\51\118\56\100\71\117\52\100\81\110\116\101\49\111\76\77\73\53\109\102\89\85\79\110\89\52\98\85\76\55\100\82\66\43\87\82\83\83\79\122\73\102\57\81\49\77\111\43\48\102\56\81\103\107\78\107\76\118\74\73\78\56\66\43\121\78\67\110\70\75\54\103\71\65\87\53\76\87\90\68\73\109\67\50\79\48\65\53\107\111\83\80\66\82\78\83\43\43\80\121\85\69\82\83\71\43\98\75\74\98\83\77\66\65\89\100\72\52\51\119\80\85\65\107\57\104\121\122\71\115\69\51\116\111\105\66\65\72\53\76\108\57\68\49\54\117\78\78\83\117\81\53\104\121\100\101\117\48\100\122\108\108\108\71\99\110\54\114\112\115\89\57\119\51\111\83\109\76\86\48\48\98\109\86\114\77\89\118\101\109\104\71\52\47\83\43\55\56\70\111\109\54\73\47\105\55\74\110\99\121\52\75\50\110\99\57\106\85\116\73\65\74\76\102\113\83\90\73\113\43\55\81\110\56\66\65\101\82\72\117\49\71\103\105\67\113\121\109\70\57\113\83\82\108\103\55\86\79\77\51\99\86\43\97\103\52\108\101\84\119\112\99\43\67\80\118\71\107\82\98\122\85\67\65\52\107\101\56\48\106\102\73\65\76\106\57\70\74\102\82\118\71\101\69\48\84\122\89\121\67\67\115\112\103\87\88\120\68\56\109\120\84\108\73\110\67\53\69\86\112\70\53\69\81\89\65\90\108\103\107\105\117\90\97\107\104\118\117\54\103\66\112\74\97\118\79\113\118\112\90\80\53\47\102\72\119\76\82\50\104\114\84\82\122\117\105\79\112\121\69\98\103\50\73\50\48\75\116\90\65\50\100\88\108\87\112\101\103\78\97\76\74\86\88\117\75\65\121\119\57\51\117\50\97\111\78\79\71\57\112\120\97\119\89\47\67\78\122\78\76\109\86\76\70\80\85\101\102\117\82\53\103\120\80\89\90\119\71\98\103\68\100\115\69\103\72\80\111\118\69\56\71\113\87\75\105\120\106\55\54\114\100\85\76\49\81\84\76\73\43\70\80\103\97\115\75\66\107\89\117\108\65\108\119\97\67\75\51\43\55\105\78\54\75\80\107\83\73\100\101\90\50\81\83\116\78\67\87\109\88\113\50\112\86\54\48\112\99\77\70\49\80\112\47\121\52\114\106\89\51\77\99\115\65\105\43\54\74\54\65\66\107\112\116\99\53\90\118\84\75\114\89\72\88\48\65\81\100\71\51\121\67\71\51\97\73\118\79\51\53\72\73\83\75\83\119\71\56\56\106\80\115\110\99\79\53\69\67\100\55\77\109\101\80\106\106\110\109\84\53\56\103\109\110\55\106\118\112\50\117\54\109\57\81\108\103\48\114\106\106\111\49\85\114\112\48\66\49\98\121\100\49\54\78\107\82\87\57\77\77\117\87\98\48\69\104\100\113\98\52\101\53\103\79\50\83\72\98\49\109\111\89\111\67\48\82\90\89\84\97\65\105\118\110\108\107\111\83\56\48\72\47\122\49\65\74\121\51\100\77\100\72\113\43\77\86\79\55\87\88\105\117\102\87\72\50\79\107\82\53\113\79\51\104\71\119\75\90\77\73\83\52\70\70\107\119\71\117\117\79\117\55\86\105\116\49\68\122\90\119\86\99\106\65\118\68\119\104\102\75\54\76\71\84\120\89\117\55\115\99\71\117\105\107\109\77\88\89\114\74\111\56\109\51\112\118\114\49\55\99\107\102\47\67\76\115\71\52\99\83\114\84\50\48\77\78\79\81\57\100\100\109\57\69\79\103\86\72\76\118\49\113\77\122\118\74\75\74\81\82\88\115\98\76\75\98\56\69\67\98\110\78\101\88\106\112\54\48\116\57\85\122\88\50\104\116\54\89\116\75\116\53\100\55\49\118\48\74\90\72\66\87\118\114\49\52\55\108\76\80\100\87\89\109\122\69\75\106\88\103\116\105\90\120\56\54\98\117\89\55\117\82\54\112\98\111\108\50\70\55\116\54\119\74\84\83\113\120\111\77\50\49\122\119\99\108\103\76\103\107\50\55\110\47\105\66\68\110\118\49\108\101\83\99\121\100\80\66\102\48\53\85\122\52\53\108\117\113\79\103\73\81\70\88\102\122\43\87\51\67\90\72\43\90\51\99\69\78\107\43\74\50\103\99\100\65\55\81\66\83\67\105\74\77\103\109\102\90\51\70\57\65\105\78\78\50\121\119\120\56\48\77\71\110\70\102\69\73\88\118\55\82\84\121\43\117\68\80\112\109\84\106\122\100\116\117\97\112\56\56\73\113\57\48\99\102\108\105\122\106\77\99\73\119\113\54\99\121\84\100\114\115\43\68\74\83\86\98\107\47\108\101\49\76\80\119\110\117\114\90\47\118\43\112\100\80\100\56\47\102\75\70\90\111\116\49\117\72\114\89\111\122\107\65\66\57\71\112\87\68\106\122\66\89\86\105\50\80\87\79\121\107\65\53\88\120\98\48\108\82\89\115\56\68\51\87\69\49\112\80\50\97\85\79\112\49\90\57\108\109\75\50\86\66\69\99\116\112\71\75\121\78\84\51\71\50\119\112\48\48\66\118\66\102\84\80\47\111\121\84\56\122\80\98\100\84\115\54\73\73\50\72\49\70\106\99\54\101\53\70\68\76\85\72\114\79\98\88\105\106\67\104\49\84\56\82\111\50\43\113\88\103\84\67\83\55\102\67\55\83\120\49\108\113\51\65\113\122\89\52\57\98\83\84\122\97\120\84\118\87\90\81\83\119\107\119\49\75\104\103\85\115\76\100\51\53\71\108\54\119\116\86\48\122\103\78\119\111\99\103\87\76\48\119\74\110\105\68\111\68\51\119\89\116\98\49\47\110\71\107\52\67\100\82\43\69\79\72\49\43\118\51\99\113\65\120\88\116\50\50\84\57\75\86\118\80\80\99\102\119\65\67\104\117\84\105\119\99\115\112\81\83\111\43\106\51\117\105\101\106\66\121\43\80\65\72\79\100\109\71\103\54\50\115\86\118\70\74\109\51\103\100\80\120\98\74\107\101\103\83\71\67\71\106\100\106\111\111\85\105\76\43\116\99\55\72\87\105\50\47\118\110\115\121\77\53\110\85\51\48\52\86\101\50\122\47\66\70\117\113\116\120\100\108\81\121\87\99\83\104\82\47\102\118\99\106\80\77\86\106\121\76\82\56\86\70\81\57\51\97\88\43\115\83\79\48\116\114\81\102\104\43\118\43\121\109\49\107\97\107\77\122\103\102\105\71\55\43\69\102\68\115\115\86\102\99\103\100\53\85\100\54\119\87\100\108\43\70\75\98\76\86\83\66\121\75\108\90\48\112\97\78\114\97\75\72\103\118\79\51\51\99\106\67\68\111\90\107\98\65\88\54\78\101\100\54\101\115\73\112\87\119\111\102\76\98\84";local arfarflIIllIII='cGdGMyktdmIsIzp7eE5xViI=';local arfarflIIllIIl='\109\101\111\119\97\114\102';local arfarflIIlIIlI=function(a,b)local c=arfarflIIlIlIl(arfarflIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,arfarflIIlIllI(b))return arfarflIIlIllI(d)end;local arfarflIIllIIl='\109\101\111\119\97\114\102';local arfarflIIllIll='\101\108\73\57\77\88\78\110\76\49\115\108\85\81\61\61';local arfarflIIllIlI='QHZiQkloTlA+cEtBQWl3MDMzUA==';local arfarflIIlIIII='Oz8/NGtZYjtDaUkrRkErWloyOyNzUyVycTolSjNqJDQwaE4=bi12PyZmUDh0RiF1';function arfarflIIlIlll(a,b)local c=arfarflIIlIllI(a,b);local d=arfarflIIllIlI;return c,d end;return arfarflIIlIlII(arfarflIIlIIlI(arfarflIIllIll,arfarflIIlIIIl),getfenv(0))()end)()